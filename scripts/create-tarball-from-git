#! /bin/bash
#set -x

VERBOSE=0

die () {
    case $1 in
     -n)
        echo -e "$1" >&2
	;;
     *) shift
        echo -e "$1" >&2
	usage >&2 
	;;
    esac
    exit 1
}

usage () {
cat<<EOF
     $(basename $0) [-v <version>] [-d <outdir>] [-c <compression>] | [-h]
     Creaqte a tarball from HEAD or a given version of a git repo.
     Options:
          -v <version>: git version to use. default: HEAD
          -d <outdir>:  directory to place file. default: $pwd
          -c <compression>: comression to use. Vaild are:
                            gz, Z, bz2, xz, lzma, zip. default: bz2.
EOF
}

compression=bz2
outdir=.
version=HEAD
package=$(basename $(git rev-parse --show-toplevel))

while [ -n "$1" ]
do
    case $1 in
	-v) shift; version=$1; shift ;;
	-d) shift; outdir=$1; shift ;;
	-c) shift; compression=$1; shift ;;
	-h) usage; exit 0 ;;
	*) die "Wrong argument $1" ;;
    esac
done

versionstring=$(git describe $version 2>/dev/null | sed -e "s/-/./" -e  "s/-/_/")

[ -n "$versionstring" ] || die "$version not a git version"
[ -n "$outdir" -a -d "$outdir" ] || die "\"$dir\" not a valid output directory"
case $compression in
    gz|Z|bz2|xz|lzma|zip) ;;
    *) die "\"$compression\" invalid compression type" ;;
esac

git archive --format=tar.$compression --prefix=$package-$versionstring/ \
    -o $outdir/$package-$versionstring.tar.$compression $version
